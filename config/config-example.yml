# Define reusable common headers for HTTP requests
common_headers: &common_headers
  Content-Type: application/json
  Accept: application/json

# Define reusable common body parameters
common_body: &common_body
  someProperty: someValue
  userid_resolve: { $dynamic: user_structured }
  userid_request: { $dynamic: user_structured, when: request}

dynamics:
  patterns:
    user_structured:
      template: "1234${hex:22}${choice:teams}00"
  sets:
    teams: ["00","01","02","03"]

StashConfig:
  # Unique name to identify this configuration
  Name: Example

  # Default settings applied to all requests unless overridden
  Defaults:
    URLRoot: https://api.example.com
    FlowControl:
      DelaySeconds: 2
      TimeoutSeconds: 2
    # Default headers including common headers
    Headers:
      <<: *common_headers
      Authorization: Bearer ABC123

    # Retry configuration for failed requests
    Retry:
      Attempts: 4                    # Number of retry attempts
      BackoffStrategy: exponential   # Exponential backoff between retries
      BackoffSeconds: 0.5           # Initial backoff duration
      Multiplier: 2.0               # Multiplier for exponential backoff
      MaxBackoffSeconds: 10         # Maximum backoff duration
      Jitter: true                  # Add randomness to backoff time
      RetryOnStatus: [ 429, 500, 502, 503, 504 ]  # HTTP status codes to retry on

  # Forced settings that override request-specific settings
  Forced:
    Headers:
      Authorization: Bearer DEF456
    Body:
      <<: *common_body

  # Define sequences of API requests
  Sequences:
    - Name: ExampleSeq             # Name of the sequence
      Type: Sequential             # Requests run in sequence
      Requests:
        - GetState: # First request
            Method: GET            # HTTP method
            URLPath: /state        # API endpoint path
            Body: # Request body
              someOther: value2
              timestamp_resolve_time: { $timestamp: epoch_ms }
              timestamp_request_time: { $timestamp: { format: epoch_ms, when: request } }
            Retry: Null           # Disable retry for this request
        - GetConfig: # Second request
            Method: GET
            URLPath: /config
            Body:
              ts_iso_request_time: { $func: timestamp, format: iso_8601, when: request }